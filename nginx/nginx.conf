worker_processes 1;

events {
    worker_connections 1024; # if 2 worker_processes then 2048 clients served.
}

http {
    include mime.types;

    upstream spring_cluster {
        least_conn;
        server app1:8080;  # Use the service name from docker-compose
        server app2:8080;  # Use the service name from docker-compose
        server app3:8080;  # Use the service name from docker-compose
    }

    server {
        listen 443 ssl; # 443 -> standard port for Https traffic enabling secure SSL for secure communication.
        server_name localhost;

        # SSL certificate settings
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://spring_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # Optional server block for HTTP to HTTPS redirection
    server {
        listen 80;  # Listen on port 80 for HTTP
        server_name localhost;

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

}
